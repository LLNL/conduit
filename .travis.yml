###############################################################################
# Copyright (c) 2014-2015, Lawrence Livermore National Security, LLC.
#
# Produced at the Lawrence Livermore National Laboratory
#
# LLNL-CODE-666778
#
# All rights reserved.
#
# This file is part of Conduit.
#
# For details, see: http://software.llnl.gov/conduit/.
#
# Please also read conduit/LICENSE
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the disclaimer below.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the disclaimer (as noted below) in the
#   documentation and/or other materials provided with the distribution.
#
# * Neither the name of the LLNS/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
###############################################################################
sudo: false

language: cpp
compiler:
  - gcc
env:
  global:
    - COMPILER_CC=gcc-4.8
    - COMPILER_CXX=g++-4.8
    - COMPILER_FC=gfortran-4.8
    # we need to know the root dir for our 3rd party lib installs
    - TRAVIS_HOME=`pwd`
  matrix:
    #################################
    # test:
    #  static vs shared libs
    #  python 2 vs 3
    #  cmake 3.9.4
    #  coverage of unit tests
    #################################
    # TODO re-enable docs after resolving doxygen dep build issues
    #################################
    # everything on, shared libs, python 2.7
    # TODO turn on coverage for this case
    - BUILD_SHARED_LIBS=ON
      ENABLE_COVERAGE=OFF
      ENABLE_MPI=ON
      ENABLE_DOCS=OFF
      PYTHON_VERSION=2.7.14
      CMAKE_VERSION=3.9.4
      BLT_CXX_STD=c++11
    # mpi and docs on, shared libs, python 2.7
    - BUILD_SHARED_LIBS=OFF
      ENABLE_COVERAGE=OFF
      ENABLE_MPI=ON
      ENABLE_DOCS=OFF
      PYTHON_VERSION=2.7.14
      CMAKE_VERSION=3.9.4
      BLT_CXX_STD=c++11
    # mpi and docs on, shared libs, python 3.6
    - BUILD_SHARED_LIBS=ON
      ENABLE_COVERAGE=OFF
      ENABLE_MPI=ON
      ENABLE_DOCS=OFF
      PYTHON_VERSION=3.6.3
      CMAKE_VERSION=3.9.4
      BLT_CXX_STD=c++11
    # mpi and docs on, static libs, python 3.6
    - BUILD_SHARED_LIBS=OFF
      ENABLE_COVERAGE=OFF
      ENABLE_MPI=ON
      ENABLE_DOCS=OFF
      PYTHON_VERSION=3.6.3
      CMAKE_VERSION=3.9.4
      BLT_CXX_STD=c++11
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
       - binutils
       - gcc-4.8
       - g++-4.8
       - gfortran-4.8
       - openmpi-bin
       - openmpi-doc
       - libopenmpi-dev
script:
  - which g++
  - g++ --version
  - export CC=${COMPILER_CC}
  - export CXX=${COMPILER_CXX}
  - export FC=${COMPILER_FC}
  - ${CC} --version
  - cd $TRAVIS_BUILD_DIR
  - echo $TRAVIS_BUILD_DIR 
  # setup spack spec based on our travis options
  # note: mpi takes quite a while to build, so we use binary pkgs 
  - export SPACK_SPEC="%gcc@4.8+cmake+python~mpi"
  # variants
  - if [ $ENABLE_DOCS = 'ON' ]; then export SPACK_SPEC="${SPACK_SPEC}+doc"; fi
  - if [ $ENABLE_DOCS = 'OFF' ]; then export SPACK_SPEC="${SPACK_SPEC}~doc"; fi
  # versions and package selections (disable default options to speedup build)
  - export SPACK_SPEC="${SPACK_SPEC} ^cmake@${CMAKE_VERSION}~openssl~ncurses"
  - export SPACK_SPEC="${SPACK_SPEC} ^python@${PYTHON_VERSION}"
  - echo $SPACK_SPEC
  # build deps using uberenv
  - python scripts/uberenv/uberenv.py --spec "${SPACK_SPEC}"
  # todo:
  #- export SPACK_PYTHON_BIN_DIR=`ls -d ${TRAVIS_BUILD_DIR}/uberenv_libs/spack/opt/spack/*/*/python*/bin`
  #- pip install cpp-coveralls
  #create out-of-source build dir and install dir
  - mkdir travis-debug-build
  - mkdir travis-debug-install
  - cd    travis-debug-build
  # cmake options
  # build type
  - CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Debug"
  # shared or static libs
  - CMAKE_OPTS="${CMAKE_OPTS} -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}"
  # enable coverage (only when using shared libs case)
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_COVERAGE=${ENABLE_COVERAGE}"
  # enable mpi if selected
  - CMAKE_OPTS="${CMAKE_OPTS} -DENABLE_MPI=${ENABLE_MPI}"
  # set c++ std
  - CMAKE_OPTS="${CMAKE_OPTS} -DBLT_CXX_STD=${BLT_CXX_STD}"
  # install path
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/travis-debug-install"
  # make sure cmake is in our path
  - export CMAKE_BIN_DIR=`ls -d ${TRAVIS_BUILD_DIR}/uberenv_libs/spack/opt/spack/*/*/cmake*/bin`
  - export PATH=${CMAKE_BIN_DIR}:$PATH
  - echo $PATH
  - which cmake
  - cmake --version
  # find the spack generated host-config file that describes tpls
  - export HOST_CONFIG=`ls ${TRAVIS_BUILD_DIR}/uberenv_libs/*.cmake`
  # configure with cmake using host-config
  - cmake ${CMAKE_OPTS} -C ${HOST_CONFIG} ${TRAVIS_BUILD_DIR}/src
  # build, test, and install
  - make
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  # test our examples that demo using an installed conduit
  - cd $TRAVIS_BUILD_DIR
  - ./scripts/ci/travis-test-build-examples-vs-install.sh

after_success:
  - test ${ENABLE_COVERAGE} = "ON" && coveralls --gcov /usr/bin/gcov-4.8 --include src/libs/conduit --include src/libs/blueprint --gcov-options '\-lp' --root $TRAVIS_BUILD_DIR --build-root $TRAVIS_BUILD_DIR/travis-debug-build;
notifications:
  email:
    recipients:
      - cyrush@llnl.gov
    on_success: always
    on_failure: always
