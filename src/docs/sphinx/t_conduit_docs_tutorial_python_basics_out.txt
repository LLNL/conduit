UpdateCTestConfiguration  from :/Users/harrison37/Work/github/llnl/conduit/build-debug/DartConfiguration.tcl
Parse Config file:/Users/harrison37/Work/github/llnl/conduit/build-debug/DartConfiguration.tcl
UpdateCTestConfiguration  from :/Users/harrison37/Work/github/llnl/conduit/build-debug/DartConfiguration.tcl
Parse Config file:/Users/harrison37/Work/github/llnl/conduit/build-debug/DartConfiguration.tcl
Test project /Users/harrison37/Work/github/llnl/conduit/build-debug
Constructing a list of tests
Done constructing a list of tests
Updating test list for fixtures
Added 0 tests to meet fixture requirements
Checking test dependency graph...
Checking test dependency graph end
test 149
    Start 149: t_conduit_docs_tutorial_python_basics

149: Test command: /Users/harrison37/Work/github/llnl/conduit/uberenv_libs/spack/opt/spack/darwin-mojave-skylake/clang-10.0.0-apple/python-3.8.11-ov6mkajdxwik3reewjwupqv3qeyygnsd/bin/python3.8 "-B" "-m" "unittest" "-v" "t_conduit_docs_tutorial_python_basics"
149: Environment variables: 
149:  PYTHONPATH=/Users/harrison37/Work/github/llnl/conduit/build-debug/python-modules/:/Users/harrison37/Work/github/llnl/conduit/src/tests/docs
149: Test timeout computed to be: 1500
149: test_001_basics_very_basic (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_002_basics_hierarchial (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_003_basics_object_and_list (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_004_basics_object_and_list_itr (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_005_basics_mem_spaces (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_006_basics_bw_style (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_007_basics_bw_style_from_native (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_008_basics_fetch_vs_bracket (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_008_basics_numpy_or_node (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: test_009_basics_fetch_exist (t_conduit_docs_tutorial_python_basics.Conduit_Tutorial_Python_Basics) ... ok
149: 
149: ----------------------------------------------------------------------
149: Ran 10 tests in 0.003s
149: 
149: OK
149: BEGIN_EXAMPLE("py_basics_very_basic")
149: 
149: my: "data"
149: 
149: END_EXAMPLE("py_basics_very_basic")
149: BEGIN_EXAMPLE("py_basics_hierarchial")
149: 
149: my: "data"
149: a: 
149:   b: 
149:     c: "d"
149:     e: 64.0
149: 
149: total bytes: 15
149: 
149: END_EXAMPLE("py_basics_hierarchial")
149: BEGIN_EXAMPLE("py_basics_object_and_list")
149: 
149: object_example: 
149:   val1: "data"
149:   val2: 10
149:   val3: 3.1415
149: list_example: 
149:   - 0
149:   - 1
149:   - 2
149:   - 3
149:   - 4
149: 
149: END_EXAMPLE("py_basics_object_and_list")
149: BEGIN_EXAMPLE("py_basics_object_and_list_itr")
149: 
149: object_example: 
149:   val1: "data"
149:   val2: 10
149:   val3: 3.1415
149: list_example: 
149:   - 0
149:   - 1
149:   - 2
149:   - 3
149:   - 4
149: 
149: val1: "data"
149: val2: 10
149: val3: 3.1415
149: 
149: 0
149: 1
149: 2
149: 3
149: 4
149: END_EXAMPLE("py_basics_object_and_list_itr")
149: BEGIN_EXAMPLE("py_basics_mem_spaces")
149: 
149: mem_spaces: 
149:   0x7fc3acd24fa0: 
149:     path: "my"
149:     type: "allocated"
149:     bytes: 5
149:     allocator_id: 0
149:   0x7fc3acd27b30: 
149:     path: "a/b/c"
149:     type: "allocated"
149:     bytes: 2
149:     allocator_id: 0
149:   0x7fc3acd63610: 
149:     path: "a/b/e"
149:     type: "allocated"
149:     bytes: 8
149:     allocator_id: 0
149: total_bytes_allocated: 15
149: total_bytes_mmaped: 0
149: total_bytes_compact: 15
149: total_strided_bytes: 15
149: 
149: END_EXAMPLE("py_basics_mem_spaces")
149: BEGIN_EXAMPLE("py_basics_bw_style")
149: 
149: test: 100
149: 
149: END_EXAMPLE("py_basics_bw_style")
149: BEGIN_EXAMPLE("py_basics_bw_style_from_native")
149: 
149: {
149:   "test": {"dtype":"int64","number_of_elements": 1,"offset": 0,"stride": 8,"element_bytes": 8,"endianness": "little"}
149: }
149: END_EXAMPLE("py_basics_bw_style_from_native")
149: BEGIN_EXAMPLE("py_basics_fetch_vs_bracket")
149: == this will be an ndarray == 
149: data:  [0. 0. 0. 0. 0.]
149: repr:  array([0., 0., 0., 0., 0.])
149: 
149: == this will be an ndarray == 
149: data:  [0. 0. 0. 0. 0.]
149: repr:  array([0., 0., 0., 0., 0.])
149: 
149: END_EXAMPLE("py_basics_fetch_vs_bracket")
149: BEGIN_EXAMPLE("py_basics_numpy_or_node")
149: == this will be an ndarray == 
149: data:  [0. 0. 0. 0. 0.]
149: repr:  array([0., 0., 0., 0., 0.])
149: 
149: == this will be a node == 
149: {node}
149:  
149: to: 
149:   data: [0.0, 0.0, 0.0, 0.0, 0.0]
149: 
149: {schema}
149:  
149: to: 
149: 
149:   data: 
149:       dtype: "float64"
149:       number_of_elements: 5
149:       offset: 0
149:       stride: 8
149:       element_bytes: 8
149:       endianness: "little"
149: 
149: END_EXAMPLE("py_basics_numpy_or_node")
149: BEGIN_EXAMPLE("py_basics_fetch_exist")
149: == this will be an ndarray == 
149: data:  [0. 0. 0. 0. 0.]
149: repr:  array([0., 0., 0., 0., 0.])
149: 
149: Here is what went wrong:
149: 
149: file: /Users/harrison37/Work/github/llnl/conduit/src/libs/conduit/conduit_node.cpp
149: line: 14182
149: message: 
149: Cannot fetch non-existent child "TYPO" from Node(my/path)
149: 
149: END_EXAMPLE("py_basics_fetch_exist")
1/1 Test #149: t_conduit_docs_tutorial_python_basics ...   Passed    1.69 sec

The following tests passed:
	t_conduit_docs_tutorial_python_basics

100% tests passed, 0 tests failed out of 1

Total Test time (real) =   1.72 sec
